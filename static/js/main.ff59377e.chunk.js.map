{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pageNumbers","isFirstPage","isLastPage","className","classNames","disabled","href","onClick","map","number","active","items","App","useState","itemPerPage","setItemPerPage","setCurrentPage","startIndex","endIndex","length","itemsOnCurrentPage","slice","id","value","onChange","event","Number","target","window","history","replaceState","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAcd,EAAW,EAAGW,GAC5BI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAcnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAAUJ,IAHhB,SAME,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAI,WAAMX,GACV,gBAAeM,EACfM,QAnBe,WAChBN,GACHL,EAAaD,EAAc,IAYzB,oBAUDK,EAAYQ,KAAI,SAAAC,GACf,OACE,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQf,IAAgBc,IAJ9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAZEA,MAiBX,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUH,IAHhB,SAME,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMX,GACV,gBAAeO,EACfK,QA7De,WAChBL,GACHN,EAAaD,EAAc,IAsDzB,wBCzEFgB,EAAQzB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAIPsB,EAAgB,WAC3B,IAEA,EAAsCC,mBAFX,GAE3B,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAFX,GAE3B,mBAAOlB,EAAP,KAAoBqB,EAApB,KACMC,GAActB,EAAc,GAAKmB,EACjCI,EAAWvB,EAAcmB,EAAcH,EAAMQ,OAC/CR,EAAMQ,OACNxB,EAAcmB,EACZM,EAAqBT,EAAMU,MAAMJ,EAAYC,GAEnD,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SAEI,eAAQR,EAAR,mBAA8BsB,EAAa,GAA3C,aACQC,EADR,eACuBP,EAAMQ,OAD7B,OAKJ,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAOT,EACPU,SAAU,SAACC,GACTV,EAAeW,OAAOD,EAAME,OAAOJ,QACnCP,EA7Be,GAJCY,OAAOC,QAAQC,aAAa,KAAM,GAAI,OA0B1D,UAWE,wBAAQP,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOQ,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOkB,EAAMQ,OACbzB,QAASoB,EACTnB,YAAaA,EACbC,aAAcoB,IAGhB,6BACGI,EAAmBZ,KAAI,SAAAwB,GAAI,OAC1B,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC/DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ff59377e.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pageNumbers = getNumbers(1, totalPages);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n\n  const selectNextPage = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const selectPrevPage = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: isFirstPage },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={isFirstPage}\n          onClick={selectPrevPage}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map(number => {\n        return (\n          <li\n            key={number}\n            className={classNames(\n              'page-item',\n              { active: currentPage === number },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${number}`}\n              onClick={() => onPageChange(number)}\n            >\n              {number}\n            </a>\n          </li>\n        );\n      })}\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: isLastPage },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={isLastPage}\n          onClick={selectNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst setLinkOnChange = () => window.history.replaceState(null, '', '#1');\n\nexport const App: React.FC = () => {\n  const defaultItemPerPage = 5;\n  const defaultCurrentPage = 1;\n  const [itemPerPage, setItemPerPage] = useState(defaultItemPerPage);\n  const [currentPage, setCurrentPage] = useState(defaultCurrentPage);\n  const startIndex = (currentPage - 1) * itemPerPage;\n  const endIndex = currentPage * itemPerPage > items.length\n    ? items.length\n    : currentPage * itemPerPage;\n  const itemsOnCurrentPage = items.slice(startIndex, endIndex);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {\n          `Page ${currentPage} (items ${startIndex + 1}`\n          + ` - ${endIndex} of ${items.length})`\n        }\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemPerPage}\n            onChange={(event) => {\n              setItemPerPage(Number(event.target.value));\n              setCurrentPage(defaultCurrentPage);\n              setLinkOnChange();\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {itemsOnCurrentPage.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}